name: Linux2

on:
    push:
    workflow_dispatch:

jobs:

  linux:
    name: Rocky Linux 8
    runs-on: ubuntu-latest

    env:
      UPLOAD_ARTIFACT: "true"

    steps:
      - name: Get repository name
        run: echo "REPO_NAME=${GITHUB_REPOSITORY##*/}" >> $GITHUB_ENV

      - name: Set Tag Name
        run: echo "TAGNAME=$(echo ${{ github.ref }} | cut -d '/' -f3)" >> $GITHUB_ENV 

      - name: Clone.
        uses: actions/checkout@v4
        with:
          submodules: recursive
          path: ${{ env.REPO_NAME }}
          fetch-depth: 0
      - run: git checkout ${{ env.TAGNAME }}

      - name: Free Disk Space
        uses: jlumbroso/free-disk-space@main
        with:
         tool-cache: false
         android: false
         dotnet: true
         haskell: true
         large-packages: false
         docker-images: true
         swap-storage: false

      - name: Sync Docker Image
        run: |
          echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u $ --password-stdin
          docker pull ghcr.io/telegramdesktop/tdesktop/centos_env
          docker tag ghcr.io/telegramdesktop/tdesktop/centos_env tdesktop:centos_env

      - name: Build Release
        run: |
          cd $REPO_NAME

          DEFINE=""
          if [ -n "${{ matrix.defines }}" ]; then
            DEFINE="-D ${{ matrix.defines }}=ON"
            echo Define from matrix: $DEFINE
            echo "ARTIFACT_NAME=materialgram_${{ matrix.defines }}" >> $GITHUB_ENV
          else
            echo "ARTIFACT_NAME=materialgram" >> $GITHUB_ENV
          fi

          docker run --rm \
          -v $PWD:/usr/src/tdesktop \
          -e CONFIG=Release \
          tdesktop:centos_env \
          /usr/src/tdesktop/Telegram/build/docker/centos_env/build.sh \
          -D CMAKE_EXE_LINKER_FLAGS="-flto -O3 -s" \
          -D TDESKTOP_API_ID=27089606 \
          -D TDESKTOP_API_HASH=d14ed11b1ec58dfe89233e976834ea73 \
          -D DESKTOP_APP_DISABLE_AUTOUPDATE=True \
          -DCMAKE_INTERPROCEDURAL_OPTIMIZATION=ON \
          $DEFINE

      - name: Check
        run: |
          filePath="$REPO_NAME/out/Release/materialgram"
          if test -f "$filePath"; then
            echo "Build successfully done! :)"

            size=$(stat -c %s "$filePath")
            echo "File size of ${filePath}: ${size} Bytes."
          else
            echo "Build error, output file does not exist."
            exit 1
          fi

      - name: Tar artifact
        run: |
          mv $REPO_NAME/out/Release/materialgram $REPO_NAME/scripts/ && cd $REPO_NAME/scripts 
          chmod +x *
          tar -czvf linux_amd64_materialgram_${{ env.TAGNAME }}.tar.gz *
      
      - uses: actions/upload-artifact@v4
        if: env.UPLOAD_ARTIFACT == 'true'
        name: Upload artifact.
        with:
          name: ${{ env.ARTIFACT_NAME }}
          path: ${{ env.REPO_NAME }}/scripts/*.tar.gz

      - name: Upload to Release
        uses: softprops/action-gh-release@v2
        with:
          files: ${{ env.REPO_NAME }}/scripts/*.tar.gz
          name: ${{ env.TAGNAME }}
          tag_name: ${{ env.TAGNAME }}
